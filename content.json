{"pages":[{"title":"about","text":"","link":"/about/"}],"posts":[{"title":"CF1304A Two Rabbits","text":"A. Two Rabbits原题传送门 Problem Restatement两个兔子以恒定速度相向而行，求相遇时间？若无法在整时间相遇，输出$-1$ Solution相遇问题，距离除以总速度为时间，看时间是否为整数即可。 Code123456789101112131415161718#include &lt;bits/stdc++.h&gt;void solve(){ int x,y,a,b; scanf(\"%d %d %d %d\", &amp;x, &amp;y, &amp;a, &amp;b); if((y-x)%(a+b)==0) printf(\"%d\\n\", (y-x)/(a+b)); else printf(\"-1\\n\");}int main(){ int T=1; scanf(\"%d\", &amp;T); while(T--){ solve(); } return 0;}","link":"/Codeforces/Round-620-Div-2/CF1304A/"},{"title":"CF1304B Longest Palindrome","text":"B. Longest Palindrome原题传送门 Problem Restatement给出n个，长度为m的字符串。$(1≤𝑛≤100,1≤m≤50) $ 用部分或全部字符串，在一定的顺序拼接下，拼出最长的回文串。 Solution数据小，直接配对即可。 对于每个串寻找是否存在其共轭串（即一正一反），若存在则放置在串两头。 否则，看是否该串本就是回文，若是则放置中间。 Code1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768#include &lt;bits/stdc++.h&gt;using namespace std;int n,m;bool ispair(char *s1,char *s2){ for(int i=0;i&lt;m;i++){ if(s1[i]!=s2[m-i-1]) return 0; } return 1;}bool ispalindrome(char *s1){ for(int i=0;i&lt;m;i++){ if(s1[i]!=s1[m-i-1]) return 0; } return 1;}char s[105][105];bool flag[105];list&lt;int&gt; li;void solve(){ scanf(\"%d %d\", &amp;n, &amp;m); for(int i=1;i&lt;=n;i++) scanf(\"%s\", s[i]); memset(flag+1,0,n*sizeof(flag[0])); li.clear(); int mid=0; for(int i=1;i&lt;=n;i++){ if(flag[i]) continue; for(int j=i+1;j&lt;=n;j++){ if(flag[j]) continue; if(ispair(s[i],s[j])){ flag[i]=flag[j]=1; li.push_front(i); li.push_back(j); break; } } if(!flag[i] &amp;&amp; !mid){ if(ispalindrome(s[i])) mid=i; } } if(mid) printf(\"%lu\\n\", m*li.size()+m); else printf(\"%lu\\n\", m*li.size()); if(li.size()==0 &amp;&amp; mid){ printf(\"%s\\n\", s[mid]); } else{ int cnt=0; for(auto t:li){ cnt++; printf(\"%s\", s[t]); if(cnt==li.size()/2) printf(\"%s\", s[mid]); } }}int main(){ int T=1; // scanf(\"%d\", &amp;T); while(T--){ solve(); } return 0;}","link":"/Codeforces/Round-620-Div-2/CF1304B/"}],"tags":[{"name":"签到题","slug":"签到题","link":"/tags/%E7%AD%BE%E5%88%B0%E9%A2%98/"}],"categories":[{"name":"Codeforces","slug":"Codeforces","link":"/categories/Codeforces/"},{"name":"Round 620 (Div. 2)","slug":"Codeforces/Round-620-Div-2","link":"/categories/Codeforces/Round-620-Div-2/"}]}